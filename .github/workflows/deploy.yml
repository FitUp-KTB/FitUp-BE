name: CI/CD Pipeline for Backend

on:
  push:
    branches:
      - main
      - dev

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Set IMAGE_NAME
        id: set-image
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "IMAGE_NAME=${{ secrets.DOCKER_HUB_USERNAME }}/fitup-backend" >> $GITHUB_ENV
          else
            echo "IMAGE_NAME=${{ secrets.DOCKER_HUB_USERNAME }}/fitup-backend-dev" >> $GITHUB_ENV
          fi

      - name: Build Spring Boot Application
        run: |
          chmod +x gradlew
          ./gradlew clean build -x test

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: |
          JAR_FILE=$(ls build/libs/*.jar | grep -v plain)
          docker build -t $IMAGE_NAME:${{ github.ref_name }} .

      - name: Push Docker Image to Docker Hub
        run: |
          docker push $IMAGE_NAME:${{ github.ref_name }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}

    steps:
      - name: Set IMAGE_NAME
        id: set-image
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "IMAGE_NAME=${{ secrets.DOCKER_HUB_USERNAME }}/fitup-backend" >> $GITHUB_ENV
          else
            echo "IMAGE_NAME=${{ secrets.DOCKER_HUB_USERNAME }}/fitup-backend-dev" >> $GITHUB_ENV
          fi

      - name: Deploy to Remote Servers via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
            docker pull $IMAGE_NAME:${{ github.ref_name }}

            mkdir -p /home/${{ secrets.SSH_USER }}/backend
            cd /home/${{ secrets.SSH_USER }}/backend

            docker-compose down || true

            export SPRING_PROFILES_ACTIVE=${{ github.ref_name }}
            export SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}
            export SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}
            export SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}
            export GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}

            docker-compose up -d